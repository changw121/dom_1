{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    create(string) {\r\n        const container = document.createElement(\"template\");\r\n        //如果你传入的string前面有空格，那么string中第一个孩子就是空格形成的文本\r\n        //故要用trim去掉空格\r\n        container.innerHTML = string.trim();\r\n        //template拿到子元素的方法\r\n        return container.content.firstChild;\r\n    },    \r\n    after(node,node2){  //在node结点后面添加node2\r\n        //把node2插到node下一个结点的前面\r\n        //经验证：即使node没有下一个结点仍然可以插入成功\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    before(node,node2){ //在node结点前面添加node2\r\n        node.parentNode.insertBefore(node2, node);\r\n    },    \r\n    append(parent, node) { //新增儿子节点\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node, parent){ //新增node的父节点parent\r\n        dom.before(node, parent); //先将parent结点插入到node前面\r\n        dom.append(parent, node); //再将node结点插入到parent的儿子节点上\r\n    },\r\n    remove(node){ //删除结点node\r\n        node.parentNode.removeChild(node); //让父节点删除它的儿子节点node\r\n        return node;\r\n    },\r\n    empty(node){ //删除node节点的所有儿子节点\r\n        // const {childNodes} = node  //等价于const childNodes = node.childNodes \r\n        const array = []\r\n        let x = node.firstChild;\r\n        while(x){\r\n            //由于我remove写了return，所以这里就可以直接push\r\n            array.push(dom.remove(node.firstChild)); \r\n            x = node.firstChild;\r\n        }\r\n        return array\r\n    },\r\n    //读写结点的属性\r\n    attr(node, name, value){  //重载\r\n        //arguments.length：获取传入参数的个数\r\n        if(arguments.length === 3){ //当参数有三个时，给结点添加name:value\r\n            node.setAttribute(name, value); //node本来就有setAttribute\r\n        } else if(arguments.length === 2) {\r\n            return node.getAttribute(name); //当参数有两个时，为获取name的值value\r\n        }\r\n    },\r\n    text(node, string){  //适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string; //ie\r\n            } else {\r\n                node.textContent = string;  //firefox Chrome\r\n            }  \r\n        } else if(arguments.length === 1) {\r\n            if('innerText' in node){\r\n                return node.innerText;  //ie\r\n            } else {\r\n                return node.textContent;  //firefox Chrome\r\n            }  \r\n        }              \r\n    },\r\n    //读写结点Html内容\r\n    html(node, string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string;\r\n        } else if(arguments.length === 1){\r\n            return node.innerHTML;\r\n        }        \r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length === 3){\r\n            //dom.style(div, 'color', 'red')\r\n            node.style[name] = value;\r\n        }else if(arguments.length === 2){\r\n            if(typeof name === \"string\"){\r\n                //dom.style(div, 'color')\r\n                return node.style[name];\r\n            }else if(name instanceof Object){\r\n                //dom.style(div, {color: 'red'})\r\n                const object = name;\r\n                for(let key in object){\r\n                    node.style[key] = object[key];  //node.style.key不行\r\n                }\r\n            }\r\n        }        \r\n    },\r\n    class: {\r\n        add(node, className){\r\n            node.classList.add(className);\r\n        }, \r\n        remove(node, className){\r\n            node.classList.remove(className);\r\n        },\r\n        has(node, className){\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n    on(node, eventName, fn){\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    off(node, eventName, fn){\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    find(selector, scope){\r\n        // debugger\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    parent(node){\r\n        return node.parentNode;\r\n    },\r\n    children(node){\r\n        return node.children;\r\n    },\r\n    //找到node的兄弟姐妹结点\r\n    siblings(node){\r\n        //node.parentNode.children是一个伪数组，Array.from之后变成数组再filter(过滤掉自身)\r\n        return Array.from(node.parentNode.children)\r\n        .filter(n => n !== node)\r\n    },\r\n    //获取下一个结点\r\n    next(node){\r\n        let x = node.nextSibling;\r\n        while(x && x.nodeType === 3){ //看x是都存在并且是文本结点时，再往后找一个结点，如果不到不是文本的，就只能返回null\r\n            x = x.nextSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //获取上一个结点\r\n    previous(node){\r\n        let x = node.previousSibling;\r\n        while(x && x.nodeType === 3){ //看x是都存在并且是文本结点时，再往后找一个结点，如果不到不是文本的，就只能返回null\r\n            x = x.previousSibling;\r\n        }\r\n        return x;\r\n    },\r\n    //遍历所有结点\r\n    each(nodeList, fn){\r\n        for(let i =0; i<nodeList.length; i++){\r\n            fn.call(null, nodeList[i]);\r\n        }\r\n    },\r\n    //获取node排行老几\r\n    index(node){\r\n        let i;\r\n        const list = dom.children(node.parentNode);\r\n        for(i=0; i<list.length; i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n\r\n};"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}